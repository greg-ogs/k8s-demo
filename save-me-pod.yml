apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"name":"save-me"},"name":"save-me","namespace":"find-me"},"spec":{"containers":[{"args":["sleep infinity"],"command":["sh","-c"],"image":"alpine","name":"myapp","ports":[{"containerPort":80}]}]}}
  creationTimestamp: "2024-12-24T05:14:43Z"
  labels:
    name: save-me
  name: save-me
  namespace: find-me
  resourceVersion: "76409"
  uid: df1c5dce-74f2-4c22-b9f6-848eeae18e72
spec:
  containers:
  - args:
    - sleep infinity
    command:
    - sh
    - -c
    image: alpine
    imagePullPolicy: Always
    name: myapp
    ports:
    - containerPort: 80
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-gdxq2
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-gdxq2
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-12-25T17:11:43Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2024-12-24T05:14:43Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-12-25T17:11:43Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-12-25T17:11:43Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-12-24T05:14:43Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://31e6c1e0db689c20ecae18c3425971d5b96c3482521fa00e4f513dd7e45f1a1c
    image: alpine:latest
    imageID: docker-pullable://alpine@sha256:21dc6063fd678b478f57c0e13f47560d0ea4eeba26dfc947b2a4f81f686b9f45
    lastState:
      terminated:
        containerID: docker://ca16e3e43e226aa23c47ebb9add3a8dcd0b5642c0f9d7f97495496478cf5e1ee
        exitCode: 255
        finishedAt: "2024-12-25T17:11:30Z"
        reason: Error
        startedAt: "2024-12-24T22:43:18Z"
    name: myapp
    ready: true
    restartCount: 2
    started: true
    state:
      running:
        startedAt: "2024-12-25T17:11:42Z"
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-gdxq2
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 192.168.49.2
  hostIPs:
  - ip: 192.168.49.2
  phase: Running
  podIP: 10.244.0.40
  podIPs:
  - ip: 10.244.0.40
  qosClass: BestEffort
  startTime: "2024-12-24T05:14:43Z"