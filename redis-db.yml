apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"name":"redis-db"},"name":"redis-db","namespace":"trouble"},"spec":{"containers":[{"args":["sleep infinity"],"command":["sh","-c"],"image":"busybox","name":"redis-db"}]}}
  creationTimestamp: "2024-12-24T05:14:43Z"
  labels:
    name: redis-db
  name: redis-db
  namespace: trouble
  resourceVersion: "82595"
  uid: 869712fd-a698-4284-8c63-872a2c3779bd
spec:
  containers:
  - args:
    - sleep infinity
    command:
    - sh
    - -c
    image: busybox
    imagePullPolicy: Always
    name: redis-db
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-hsdrm
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-hsdrm
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-12-25T18:56:19Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2024-12-24T05:14:43Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-12-24T05:14:43Z"
    message: 'containers with unready status: [redis-db]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-12-24T05:14:43Z"
    message: 'containers with unready status: [redis-db]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-12-24T05:14:43Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://a3d925b3f780eaa34a6f6c1fa21d60e126be30af2366a9044e001c8a1978d162
    image: busybox:latest
    imageID: docker-pullable://busybox@sha256:2919d0172f7524b2d8df9e50066a682669e6d170ac0f6a49676d54358fe970b5
    lastState:
      terminated:
        containerID: docker://a3d925b3f780eaa34a6f6c1fa21d60e126be30af2366a9044e001c8a1978d162
        exitCode: 127
        finishedAt: "2024-12-25T19:12:13Z"
        reason: Error
        startedAt: "2024-12-25T19:12:13Z"
    name: redis-db
    ready: false
    restartCount: 335
    started: false
    state:
      waiting:
        message: back-off 5m0s restarting failed container=redis-db pod=redis-db_trouble(869712fd-a698-4284-8c63-872a2c3779bd)
        reason: CrashLoopBackOff
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-hsdrm
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 192.168.49.2
  hostIPs:
  - ip: 192.168.49.2
  phase: Running
  podIP: 10.244.0.61
  podIPs:
  - ip: 10.244.0.61
  qosClass: BestEffort
  startTime: "2024-12-24T05:14:43Z"